version: 2.1
orbs:
  node: circleci/node@7.0.0
  utils: ethereum-optimism/circleci-utils@0.0.6
  slack: circleci/slack@4.12.5

executors:
  node20:
    docker:
      - image: cimg/node:20.11.1 # Prebuilt CircleCI image for Node.js 20.x
    resource_class: medium # Adjust resource allocation as needed
  ubuntu:
    machine:
      image: ubuntu-2204:current
  rust:
    docker:
      - image: cimg/rust:1.75.0 # CircleCI's Rust Docker image
    working_directory: ~/project

commands:
  notify_slack_on_failure:
    steps:
      - slack/notify:
          event: fail
          channel: ${SLACK_DEFAULT_CHANNEL}
          template: BASIC_FAIL_1
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "‚ùå Job Failed: ${CIRCLE_JOB}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Workflow:* ${CIRCLE_WORKFLOW_ID}\n*Job:* ${CIRCLE_JOB}\n*Branch:* ${CIRCLE_BRANCH}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${CIRCLE_BUILD_URL}|View Job Details>"
                  }
                }
              ]
            }
  setup-node:
    steps:
      - run:
          name: Install Node.js (20.x) and pnpm
          command: |
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
            npm install -g pnpm
            pnpm --version
      - restore_cache:
          keys:
            - v1-pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install dependencies
          command: npm install -g pnpm && pnpm install
      - save_cache:
          key: v1-pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store

jobs:
  algolia:
    description: Create and upload Algolia search index
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Create and upload index
          command: |
            # index:docs requires the following environment variables, coming from the algolia-search context
            # ALGOLIA_APPLICATION_ID
            # ALGOLIA_WRITE_API_KEY
            # ALGOLIA_INDEX_NAME
            pnpm run index:docs

  breadcrumbs:
    description: Check breadcrumbs in documentation
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Run breadcrumb check
          command: pnpm check-breadcrumbs
  lint:
    description: Lint Markdown files
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Lint Markdown files
          command: pnpm lint

  links:
    executor: rust
    steps:
      - checkout:
          path: docs
      - run:
          name: Checkout lycheeverse/lychee
          command: |
            git clone https://github.com/lycheeverse/lychee.git lychee

      - restore_cache:
          keys:
            - v1-rust-cache-{{ checksum "lychee/Cargo.lock" }}
            - v1-rust-cache-

      - run:
          name: Build Lychee
          command: |
            cd lychee
            cargo build --release

      - save_cache:
          key: v1-rust-cache-{{ checksum "lychee/Cargo.lock" }}
          paths:
            - ~/.cargo/registry
            - ~/.cargo/git
            - lychee/target

      - run:
          name: Run Lychee link checker
          command: |
            export PATH=$PATH:$HOME/project/lychee/target/release
            cd docs
            lychee --config ./lychee.toml --quiet "./pages"

  developer-metrics:
    description: Monthly Metrics Report
    executor: ubuntu
    parameters:
      repo:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
    steps:
      - utils/get-github-access-token:
          private-key-str: GITHUB_APP_KEY
          app-id: GITHUB_APP_ID
          repo: << parameters.repo >>
      - run:
          name: Get Dates for Last Month
          command: |
            # Calculate the first day of the previous month
            first_day=$(date -d "last month" +%Y-%m-01)


            # Calculate the last day of the previous month
            last_day=$(date -d "$first_day +1 month -1 day" +%Y-%m-%d)

            # Export the last_month variable for subsequent steps
            echo "export LAST_MONTH=${first_day}..${last_day}" >> $BASH_ENV
      - utils/generate-issue-metrics-file:
          SEARCH_QUERY: 'repo:ethereum-optimism/docs is:issue closed:${LAST_MONTH} -reason:\"not planned\" -label:monthly-report'
          file-path: "./issue_metrics.md"
      - utils/create-github-issue-from-file:
          repo: << parameters.repo >>
          file-path: "./issue_metrics.md"
          issue-title: "${LAST_MONTH} metrics report for closed issues"
          issue-labels: "monthly-report"
          assignees: "sbvegan"
      - utils/generate-issue-metrics-file:
          SEARCH_QUERY: "repo:ethereum-optimism/docs is:pr created:${LAST_MONTH}"
          file-path: "./issue_metrics.md"
      - utils/create-github-issue-from-file:
          repo: << parameters.repo >>
          file-path: "./issue_metrics.md"
          issue-title: "${LAST_MONTH} metrics report for opened prs"
          issue-labels: "monthly-report"
          assignees: "sbvegan"

  cross-dom-bridge-eth:
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Run tutorial
          command: node ./public/tutorials/cross-dom-bridge-eth.js
          environment:
            TUTORIAL_PRIVATE_KEY: ${TUTORIAL_PRIVATE_KEY}
      - notify_slack_on_failure

  send-tx-from-eth:
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Run tutorial
          command: node ./public/tutorials/send-tx-from-eth.js
          environment:
            TUTORIAL_PRIVATE_KEY: ${TUTORIAL_PRIVATE_KEY}
      - notify_slack_on_failure

  sdk-estimate-costs:
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Run tutorial
          command: node ./public/tutorials/sdk-estimate-costs.js
          environment:
            TUTORIAL_PRIVATE_KEY: ${TUTORIAL_PRIVATE_KEY}
      - notify_slack_on_failure

workflows:
  merge-workflow:
    jobs:
      - algolia:
          name: Algolia Index Update
          context: algolia-search
          filters:
            branches:
              only: main
  pr-workflow:
    jobs:
      - breadcrumbs
      - links
      - lint
  monthly-workflow:
    # when:
    #   equal: [build_monthly, <<pipeline.schedule.name>>]
    jobs:
      - developer-metrics:
          context: circleci-repo-docs

  nightly-workflow:
    when:
      equal: [build_nightly, <<pipeline.schedule.name>>]
    jobs:
      - cross-dom-bridge-eth:
          context: [tutorial-keys, slack]
      - send-tx-from-eth:
          context: [tutorial-keys, slack]
          requires:
            - cross-dom-bridge-eth
      - sdk-estimate-costs:
          context: [tutorial-keys, slack]
          requires:
            - send-tx-from-eth
